Si consideri un sistema software dedicato alla sottomissione di richieste di servizio tramite un proxy connesso al sistema di esecuzione dei servizi attraverso una connessione TCP persistente.
Il sistema deve permettere di richiedere un servizio (sia la richiesta di servizio un'istanza di classe Servizio vuota) tramite l’esecuzione di un metodo sul proxy. La chiamata per richiedere il servizio non attende il completamento del servizio ma ritorna invece immediatamente un codice alfanumerico univoco.
In seguito, fornendo tale codice alfanumerico e' possibile effettuare successive richieste al proxy per:
1) cercare il risultato della richiesta di servizio (istanza di classe Result contenente solo il codice corretto) in modo asincrono, cioe' con ritorno immediato a null in caso il risultato non sia pronto.
2) cercare il risultato della richiesta di servizio (istanza di classe Result contenente solo il codice corretto) in modo sincrono, cioe' attendendo sino a che il risultato non e' pronto.
3) cercare il risultato della richiesta di servizio (istanza di classe Result contenente solo il codice corretto) in modo sincrono con timeout, cioe' attendendo il risultato al massimo per N (parametro di chiamata) millisecondi.
L'esecuzione dei servizi richiesti deve essere svolta lato server, nel modo piu' concorrente possibile, da un pool di thread di dimensione definibile al momento del lancio del server stesso. I proxy possono essere in numero qualsiasi ed il server deve essere in grado di gestire un numero qualsiasi di connessioni. I proxy devono essere in grado di gestire richieste di servizio e di recupero del risultato concorrentemente. Non e’ dato il caso in cui un’entita’ sia “mobile” da un proxy ad un altro. Un risultato e’ persistente, cioe’ puo’ essere recuperato un numero qualsiasi di volte.